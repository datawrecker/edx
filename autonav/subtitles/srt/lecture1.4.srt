1
00:00:00,000 --> 00:00:00,960

2
00:00:00,960 --> 00:00:03,530
Welcome, everybody, to the fourth and last part

3
00:00:03,530 --> 00:00:05,820
of videos for the first lecture this week

4
00:00:05,820 --> 00:00:08,820
on Autonomous Navigation for Flying Robots.

5
00:00:08,820 --> 00:00:11,260
So this video will be fun because we've

6
00:00:11,260 --> 00:00:14,020
collected lots of video clips that

7
00:00:14,020 --> 00:00:16,059
showcase a little bit of the progress

8
00:00:16,059 --> 00:00:22,080
and history of Quadrotor Research over the past years.

9
00:00:22,080 --> 00:00:25,500
So as all of you know, the history of aviation

10
00:00:25,500 --> 00:00:27,400
started with fixed wing airplanes.

11
00:00:27,400 --> 00:00:31,900
In 1903, the Wright brothers performed

12
00:00:31,900 --> 00:00:34,080
the first successful flight-- motorized

13
00:00:34,080 --> 00:00:37,450
flight-- with their airplane.

14
00:00:37,450 --> 00:00:39,350
The general idea of an airplane is

15
00:00:39,350 --> 00:00:44,060
that you have a special shape of the wing that

16
00:00:44,060 --> 00:00:48,270
produces a lift when you move forward at a high speed.

17
00:00:48,270 --> 00:00:54,050
And in this way, the plane gets

18
00:00:54,050 --> 00:00:58,250
lifted-- experiences a lift-- and you

19
00:00:58,250 --> 00:01:00,040
can control the attitude of the plane

20
00:01:00,040 --> 00:01:04,349
by flaps that are installed in the wings

21
00:01:04,349 --> 00:01:06,410
but also at the end of the plane.

22
00:01:06,410 --> 00:01:09,450

23
00:01:09,450 --> 00:01:12,230
Planes are very successful and are technologically

24
00:01:12,230 --> 00:01:14,320
well understood.

25
00:01:14,320 --> 00:01:17,285
Probably everybody of you have already flown with an airplane.

26
00:01:17,285 --> 00:01:20,590

27
00:01:20,590 --> 00:01:25,940
It's relatively fuel efficient but one significant problem

28
00:01:25,940 --> 00:01:29,130
there is that you always need a runway to achieve

29
00:01:29,130 --> 00:01:33,700
the speed that is high enough to actually take off.

30
00:01:33,700 --> 00:01:36,800
And similarly for landing, you also need a runway.

31
00:01:36,800 --> 00:01:39,930
You can't just land somewhere, wherever you want.

32
00:01:39,930 --> 00:01:41,630
Another problem also is that you can't

33
00:01:41,630 --> 00:01:43,310
stop in the middle of the air.

34
00:01:43,310 --> 00:01:46,070
You can't just stay at a certain position.

35
00:01:46,070 --> 00:01:50,330
You always have to move forward to be sure that you have enough

36
00:01:50,330 --> 00:01:54,150
speed so that your wings generate enough lift.

37
00:01:54,150 --> 00:01:58,180
This is then what motivated people to look for, or develop

38
00:01:58,180 --> 00:02:00,940
so-called vertical takeoff and landing devices.

39
00:02:00,940 --> 00:02:04,030
And interestingly, the first such vehicle

40
00:02:04,030 --> 00:02:08,220
was built in 1924, 10 years before the helicopter.

41
00:02:08,220 --> 00:02:13,260
And this first device actually was a quadrotor.

42
00:02:13,260 --> 00:02:15,290
The problem however, with a quadrotor

43
00:02:15,290 --> 00:02:18,510
is that if you don't have any electronic control then

44
00:02:18,510 --> 00:02:23,910
it's extremely hard to stabilize the flight.

45
00:02:23,910 --> 00:02:28,122
You can imagine this is you have four different joysticks, then

46
00:02:28,122 --> 00:02:30,580
that you have to control all by yourself and that makes it,

47
00:02:30,580 --> 00:02:34,460
of course, very hard then to fly in a purposeful way

48
00:02:34,460 --> 00:02:36,800
and not to crash.

49
00:02:36,800 --> 00:02:40,710
Therefore, quadrotors were not very successful at that time

50
00:02:40,710 --> 00:02:45,710
and then, as I said, roughly 10 years later in 1936

51
00:02:45,710 --> 00:02:47,420
the helicopter-- first helicopter

52
00:02:47,420 --> 00:02:50,370
had it's first successful flight.

53
00:02:50,370 --> 00:02:55,560
The idea there is that instead of having four rotors that

54
00:02:55,560 --> 00:02:57,290
are hard to control, you just have

55
00:02:57,290 --> 00:03:02,420
one main rotor in the middle and by a very intelligent, or very

56
00:03:02,420 --> 00:03:11,000
smart mechanical construction this rotor can adjust

57
00:03:11,000 --> 00:03:13,770
the pitch of the propeller, depending

58
00:03:13,770 --> 00:03:17,160
on the current orientation, or a current rotation

59
00:03:17,160 --> 00:03:20,930
angle of this main rotor and that leads then

60
00:03:20,930 --> 00:03:27,210
to different thrust in different regions around the helicopter.

61
00:03:27,210 --> 00:03:30,660
And with that, you can control the pitch and roll.

62
00:03:30,660 --> 00:03:36,380
And with this design, it becomes possible to navigate,

63
00:03:36,380 --> 00:03:40,830
relatively easy to navigate manually.

64
00:03:40,830 --> 00:03:44,510
Of course, you still need a skilled human pilot,

65
00:03:44,510 --> 00:03:48,290
but this can be done so only a single person can do it.

66
00:03:48,290 --> 00:03:50,360
One problem obviously, is that, as you

67
00:03:50,360 --> 00:03:52,780
remember from the previous video,

68
00:03:52,780 --> 00:03:55,250
that if you have only a single rotor that

69
00:03:55,250 --> 00:03:57,950
uses a torque on your vehicle.

70
00:03:57,950 --> 00:03:59,800
So if you wouldn't do anything else,

71
00:03:59,800 --> 00:04:03,620
you would start turning around your own axis.

72
00:04:03,620 --> 00:04:08,570
And this is why a helicopter has a second tail rotor that

73
00:04:08,570 --> 00:04:11,722
then compensates for this torque.

74
00:04:11,722 --> 00:04:13,180
The good thing about helicopters is

75
00:04:13,180 --> 00:04:16,980
that they are easy to fly by a pilot.

76
00:04:16,980 --> 00:04:19,420
But a disadvantage is that you need

77
00:04:19,420 --> 00:04:21,990
this relatively-- mechanically-- relatively complicated

78
00:04:21,990 --> 00:04:23,830
swash plate in the middle.

79
00:04:23,830 --> 00:04:27,250
And also the rotor blades are relatively large

80
00:04:27,250 --> 00:04:29,800
and that makes it relatively dangerous

81
00:04:29,800 --> 00:04:31,630
when you come close to buildings.

82
00:04:31,630 --> 00:04:37,750
For example because if you get-- if you touch something--

83
00:04:37,750 --> 00:04:38,880
then you'll probably crash.

84
00:04:38,880 --> 00:04:40,890
But nevertheless, helicopters and planes

85
00:04:40,890 --> 00:04:44,340
were the most used aerial vehicles

86
00:04:44,340 --> 00:04:49,330
until maybe 10 or 15 years ago.

87
00:04:49,330 --> 00:04:51,340
Because those were the only vehicles

88
00:04:51,340 --> 00:04:54,770
that you could fly and control easily yourself,

89
00:04:54,770 --> 00:04:57,980
using a remote control or using a joystick.

90
00:04:57,980 --> 00:05:00,560
This changed dramatically when with the development

91
00:05:00,560 --> 00:05:05,010
of new MEMS sensors that appeared in end of 90s

92
00:05:05,010 --> 00:05:06,880
and the beginning of 2000s.

93
00:05:06,880 --> 00:05:10,130
Because that then suddenly enabled

94
00:05:10,130 --> 00:05:14,610
hobbyists to develop micro aerial vehicles that

95
00:05:14,610 --> 00:05:17,920
could do the attitude stabilization on board

96
00:05:17,920 --> 00:05:19,750
using such sensors.

97
00:05:19,750 --> 00:05:21,490
And then that lead to the development

98
00:05:21,490 --> 00:05:25,030
of the first remote controlled quadrotors

99
00:05:25,030 --> 00:05:28,600
that were actually relatively easy to fly.

100
00:05:28,600 --> 00:05:30,530
And then of course people started

101
00:05:30,530 --> 00:05:36,010
to add cameras to the quadrotors and use that

102
00:05:36,010 --> 00:05:40,530
for recalling extremely impressive flights.

103
00:05:40,530 --> 00:05:43,750
This one was recorded in New York, for example.

104
00:05:43,750 --> 00:05:46,340
And in the quadrotor you can come--

105
00:05:46,340 --> 00:05:48,400
because it's an unmanned vehicle-- you

106
00:05:48,400 --> 00:05:50,710
can come relatively close to such structures

107
00:05:50,710 --> 00:05:51,820
or to the buildings.

108
00:05:51,820 --> 00:05:58,080
You don't have to be afraid that the pilot could get hurt,

109
00:05:58,080 --> 00:06:05,710
You can really create stunning views from above.

110
00:06:05,710 --> 00:06:09,520
And this is a technique that has become quite popular now

111
00:06:09,520 --> 00:06:15,660
among photographers and movie makers.

112
00:06:15,660 --> 00:06:19,170
Many stunt scenes in the new James Bond movie for example,

113
00:06:19,170 --> 00:06:22,430
have been recorded from quadrotors.

114
00:06:22,430 --> 00:06:24,420
Also during sporting events partially

115
00:06:24,420 --> 00:06:27,020
quadrotors are used that then remote controlled

116
00:06:27,020 --> 00:06:32,114
by the photographer.

117
00:06:32,114 --> 00:06:34,490
Of course the development continued then

118
00:06:34,490 --> 00:06:36,250
in this direction.

119
00:06:36,250 --> 00:06:42,120
By just adding a camera that can transmit the video signal,

120
00:06:42,120 --> 00:06:45,220
you can actually get to very nice aerial views

121
00:06:45,220 --> 00:06:48,590
and a very immersive experience of that.

122
00:06:48,590 --> 00:06:50,860
This group here for example from Sweden,

123
00:06:50,860 --> 00:06:53,590
used an Oculus Rift device in combination

124
00:06:53,590 --> 00:07:02,280
with a quadrocoptor to get a live stereo view of the world

125
00:07:02,280 --> 00:07:03,720
around them.

126
00:07:03,720 --> 00:07:05,530
It's actually an octocopter.

127
00:07:05,530 --> 00:07:10,332
And then you get an image like this for seeing this now live,

128
00:07:10,332 --> 00:07:11,790
you would have to-- need an Oculus,

129
00:07:11,790 --> 00:07:14,750
but you can imagine that this is sort of a system like this

130
00:07:14,750 --> 00:07:19,380
you can have lots of fun when you're flying around.

131
00:07:19,380 --> 00:07:22,060
And as nice as all of this is, it

132
00:07:22,060 --> 00:07:25,000
is still remote controlled, and so there the main question

133
00:07:25,000 --> 00:07:27,090
for us, in the remainder of this course,

134
00:07:27,090 --> 00:07:30,550
is how can we actually achieve autonomous flight.

135
00:07:30,550 --> 00:07:34,590
And also people in universities have

136
00:07:34,590 --> 00:07:38,570
started to look at this problem and initially

137
00:07:38,570 --> 00:07:41,800
then used external positioning aids

138
00:07:41,800 --> 00:07:45,920
like a GPS system for example for outdoor flying or motion

139
00:07:45,920 --> 00:07:48,120
capture systems for indoor flying.

140
00:07:48,120 --> 00:07:54,900
So GPS is relatively easy to receive.

141
00:07:54,900 --> 00:07:57,160
The only problem is that it's not very accurate

142
00:07:57,160 --> 00:07:59,940
and that you don't get too frequent position updates.

143
00:07:59,940 --> 00:08:04,830
Maybe you can read it at 2 Hz or so, depending on your receiver.

144
00:08:04,830 --> 00:08:06,370
This is different if you go indoor.

145
00:08:06,370 --> 00:08:08,670
If you have a motion capture system,

146
00:08:08,670 --> 00:08:14,000
then usually you get poles updates at 200 to 500 Hz

147
00:08:14,000 --> 00:08:17,160
and you get you can get down up to a millimeter accuracy,

148
00:08:17,160 --> 00:08:19,440
for example.

149
00:08:19,440 --> 00:08:22,890
And if you have to position then of course

150
00:08:22,890 --> 00:08:24,630
you can ride the controller that moves

151
00:08:24,630 --> 00:08:28,370
to the quadrotor to the desired goal location.

152
00:08:28,370 --> 00:08:31,530
But even if you fine tune your controller as good

153
00:08:31,530 --> 00:08:33,511
as you can from a theoretical point of view,

154
00:08:33,511 --> 00:08:35,010
if you run it for the first time you

155
00:08:35,010 --> 00:08:38,740
will notice that the quadrotor will not exactly

156
00:08:38,740 --> 00:08:42,820
perform the trajectory that you've been hoping for.

157
00:08:42,820 --> 00:08:46,520
And so you need some training or adaptation of the flight

158
00:08:46,520 --> 00:08:48,620
parameters of dynamic calibration,

159
00:08:48,620 --> 00:08:51,810
of the dynamic parameters, to actually make

160
00:08:51,810 --> 00:08:57,270
the quadrotor perform the trajectory you desire.

161
00:08:57,270 --> 00:09:00,700

162
00:09:00,700 --> 00:09:02,410
Then when you have done that, when

163
00:09:02,410 --> 00:09:04,326
you have a good calibration and you can really

164
00:09:04,326 --> 00:09:06,500
do impressive things, for example.

165
00:09:06,500 --> 00:09:09,750
You can perform flips with the quadrotor,

166
00:09:09,750 --> 00:09:15,730
but you can also fly very accurately to certain positions

167
00:09:15,730 --> 00:09:20,640
and through, for example, through windows.

168
00:09:20,640 --> 00:09:24,650
And this is now probably for the first time we are-- quadrotors

169
00:09:24,650 --> 00:09:31,000
really exceeded, where autonomous quadrotors exceeded

170
00:09:31,000 --> 00:09:33,040
the capabilities of manual pilots.

171
00:09:33,040 --> 00:09:36,110
So a manual pilot would have a very hard time here

172
00:09:36,110 --> 00:09:38,630
to do something similar.

173
00:09:38,630 --> 00:09:42,330
But of course with a computer you can train and plan

174
00:09:42,330 --> 00:09:45,970
motion trajectories that are very complicated

175
00:09:45,970 --> 00:09:47,660
and that for example allow a quadrotor

176
00:09:47,660 --> 00:09:50,400
to fly through such a window.

177
00:09:50,400 --> 00:09:52,820
It's interesting to note here that the quadrotor cannot--

178
00:09:52,820 --> 00:09:56,950
it's not-- stable in this position.

179
00:09:56,950 --> 00:10:01,920
So as you know, it's only stable if you're leveled horizontally.

180
00:10:01,920 --> 00:10:07,010
As soon as you are moving vertically, for example, then

181
00:10:07,010 --> 00:10:09,990
you can only hold this position for a very short period

182
00:10:09,990 --> 00:10:10,490
of time.

183
00:10:10,490 --> 00:10:13,420

184
00:10:13,420 --> 00:10:17,160
You can increase this or you can adapt

185
00:10:17,160 --> 00:10:19,510
that to pinpoint playing, for example.

186
00:10:19,510 --> 00:10:24,800
This is a video from the flying machine arena at ETH Zurich.

187
00:10:24,800 --> 00:10:29,020
Here two quadrotors are tracked at the same time

188
00:10:29,020 --> 00:10:32,390
by motion capture studio and also the ball is tracked.

189
00:10:32,390 --> 00:10:34,370
And then you can develop algorithms

190
00:10:34,370 --> 00:10:40,600
that can control a quadrotor fast enough that it actually

191
00:10:40,600 --> 00:10:41,990
returns a ball.

192
00:10:41,990 --> 00:10:46,290
And with that you can create a tennis companion, for example,

193
00:10:46,290 --> 00:10:51,501
that could play ping pong with you.

194
00:10:51,501 --> 00:10:54,490

195
00:10:54,490 --> 00:11:00,740
Another really cool video that probably inspired

196
00:11:00,740 --> 00:11:04,940
lots of people to see more in quadrotors than just toys

197
00:11:04,940 --> 00:11:07,800
was this video from the GRASP Laboratory

198
00:11:07,800 --> 00:11:10,950
at the University of Pennsylvania.

199
00:11:10,950 --> 00:11:13,370
It was shown for the first time that you can actually

200
00:11:13,370 --> 00:11:18,650
build larger structures by using a quadrotor.

201
00:11:18,650 --> 00:11:21,380
So here it's still a motion capture system

202
00:11:21,380 --> 00:11:27,910
used to track the position of the quadrotor,

203
00:11:27,910 --> 00:11:31,510
and so this allows you to get to the position of the quadrotor

204
00:11:31,510 --> 00:11:34,400
but also the position of all the parts that you want to move.

205
00:11:34,400 --> 00:11:37,740

206
00:11:37,740 --> 00:11:46,790
With that, it becomes possible to construct such a structure

207
00:11:46,790 --> 00:11:52,040
that you could think of building larger structures on roofs,

208
00:11:52,040 --> 00:11:54,610
for example, of buildings that are

209
00:11:54,610 --> 00:11:57,520
hard to reach otherwise, and so on.

210
00:11:57,520 --> 00:12:00,040
And another cool thing of course about quadrotors or robots

211
00:12:00,040 --> 00:12:02,220
in general is that it scales very well, so

212
00:12:02,220 --> 00:12:04,830
if you can do it with one robot and it's also

213
00:12:04,830 --> 00:12:07,950
interesting to think about how to do it in teams of robots.

214
00:12:07,950 --> 00:12:13,290
And the execution time, or time to completion of course

215
00:12:13,290 --> 00:12:15,600
decreases linearly, ideally, if you

216
00:12:15,600 --> 00:12:17,350
have more robots at your disposal.

217
00:12:17,350 --> 00:12:20,120

218
00:12:20,120 --> 00:12:25,970
So this was a very nice video and this then convinced

219
00:12:25,970 --> 00:12:28,570
many robotics labs to start working

220
00:12:28,570 --> 00:12:32,305
on autonomous quadrotors and similar problems.

221
00:12:32,305 --> 00:12:35,330

222
00:12:35,330 --> 00:12:37,810
And then another thing that of course also happened

223
00:12:37,810 --> 00:12:40,230
at the same time was miniaturization.

224
00:12:40,230 --> 00:12:44,020
So instead of having large quadrotors,

225
00:12:44,020 --> 00:12:46,155
you can try to make them as small as possible,

226
00:12:46,155 --> 00:12:47,280
as lightweight as possible.

227
00:12:47,280 --> 00:12:49,280
This has a number of advantages.

228
00:12:49,280 --> 00:12:52,480
They are smaller, they need less space, they make less noise,

229
00:12:52,480 --> 00:12:55,050
they are less fragile.

230
00:12:55,050 --> 00:13:00,670
And they are of course also less dangerous for humans.

231
00:13:00,670 --> 00:13:06,360
And then you can again train the dynamics model and so on.

232
00:13:06,360 --> 00:13:08,390
And when you have multiple robots,

233
00:13:08,390 --> 00:13:12,640
then you can do a formation flight.

234
00:13:12,640 --> 00:13:16,210
Cooperate between these robots for example

235
00:13:16,210 --> 00:13:20,060
to make them move coordinatedly through a window.

236
00:13:20,060 --> 00:13:23,886
So this is now an array of four by five nano quadrocopters.

237
00:13:23,886 --> 00:13:30,200

238
00:13:30,200 --> 00:13:32,050
It's very interesting to look at it.

239
00:13:32,050 --> 00:13:35,660
You can do fun stuff with them.

240
00:13:35,660 --> 00:13:37,420
But also the path planning problem

241
00:13:37,420 --> 00:13:38,900
gets much more complicated if you

242
00:13:38,900 --> 00:13:41,630
have to deal with 25 robots instead of one.

243
00:13:41,630 --> 00:13:46,489

244
00:13:46,489 --> 00:13:48,030
The next thing then is that you would

245
00:13:48,030 --> 00:13:50,690
like to have a natural interface to interact

246
00:13:50,690 --> 00:13:55,830
with such quadrotors.

247
00:13:55,830 --> 00:13:58,490
You can't preprogram all the motions that you want.

248
00:13:58,490 --> 00:14:02,140
You don't want to use a computer interface for that.

249
00:14:02,140 --> 00:14:05,200
And this work here, which was a student project at ETH,

250
00:14:05,200 --> 00:14:08,360
showed that you can use, for example, a Kinect

251
00:14:08,360 --> 00:14:10,550
sensor for tracking a person and then

252
00:14:10,550 --> 00:14:14,560
the person can, in a very intuitive way,

253
00:14:14,560 --> 00:14:18,130
specify the target position for the quadrotor.

254
00:14:18,130 --> 00:14:20,500
So all of these are very cool sites.

255
00:14:20,500 --> 00:14:22,530
But it's clear that for real applications,

256
00:14:22,530 --> 00:14:25,890
external motion capture systems are somewhat impractical.

257
00:14:25,890 --> 00:14:27,620
And so the question is how they can

258
00:14:27,620 --> 00:14:31,070
do the same, also with onboard sensors?

259
00:14:31,070 --> 00:14:33,870
And of course the one of the simplest answers

260
00:14:33,870 --> 00:14:36,320
is just to use a GPS receiver.

261
00:14:36,320 --> 00:14:39,000
We will also deal with that in some

262
00:14:39,000 --> 00:14:40,960
of exercises in this course.

263
00:14:40,960 --> 00:14:44,120
An alternative is to use a laser scanner for example.

264
00:14:44,120 --> 00:14:47,660
But this is relatively heavy and relatively expensive to use.

265
00:14:47,660 --> 00:14:52,040
So we strongly focus, in our research group at least,

266
00:14:52,040 --> 00:14:54,120
on using cameras.

267
00:14:54,120 --> 00:14:56,880
Also including depth cameras like the Kinect

268
00:14:56,880 --> 00:15:04,040
for getting good 3-D models and optical maps for autonomous

269
00:15:04,040 --> 00:15:05,890
navigation.

270
00:15:05,890 --> 00:15:09,860
So the goal in general both of course for this lecture

271
00:15:09,860 --> 00:15:12,590
but also for our research in general

272
00:15:12,590 --> 00:15:14,370
is that we want to enable flying robots

273
00:15:14,370 --> 00:15:17,460
to operate fully autonomously in 3-D environments.

274
00:15:17,460 --> 00:15:22,040
And for that we want to use primarily the onboard sensors

275
00:15:22,040 --> 00:15:25,390
and then in particular an onboard camera

276
00:15:25,390 --> 00:15:29,510
because it's relatively lightweight sensor

277
00:15:29,510 --> 00:15:33,590
and it provides rich data about environment.

278
00:15:33,590 --> 00:15:36,530
Then of course we need to focus on all kinds of subproblems

279
00:15:36,530 --> 00:15:38,860
including, that we will also partially cover here

280
00:15:38,860 --> 00:15:43,240
in this lecture, and including 3-D navigation but also

281
00:15:43,240 --> 00:15:44,090
localization.

282
00:15:44,090 --> 00:15:48,160
The quadrotor needs to know of course where it is.

283
00:15:48,160 --> 00:15:50,540
We need a 3-D reconstruction of the environment

284
00:15:50,540 --> 00:15:53,340
we are operating in.

285
00:15:53,340 --> 00:15:56,640
Simply to avoid obstacles.

286
00:15:56,640 --> 00:15:59,800
But also to be able to plan trajectories,

287
00:15:59,800 --> 00:16:03,930
find the shortest path between two points and so on.

288
00:16:03,930 --> 00:16:06,220
Then at a higher level, we are also

289
00:16:06,220 --> 00:16:09,000
interested in exploration often seen

290
00:16:09,000 --> 00:16:14,000
and semantic scene understanding and of course an intuitive user

291
00:16:14,000 --> 00:16:14,550
interfaces.

292
00:16:14,550 --> 00:16:17,890
For example to be able to follow a person automatically

293
00:16:17,890 --> 00:16:22,000
and to understand the gestures of a person.

294
00:16:22,000 --> 00:16:24,370
So the instructors of this course

295
00:16:24,370 --> 00:16:29,250
are, it's me and Daniel, Professor Daniel Cremers.

296
00:16:29,250 --> 00:16:32,640
You have support of one of our Ph.D. students Christian Kerl,

297
00:16:32,640 --> 00:16:35,500
and two of our master students Julian Tatsch,

298
00:16:35,500 --> 00:16:40,470
and Jonas Jelton who will help us with the exercises.

299
00:16:40,470 --> 00:16:41,900
Our Computer Vision Group here at TUM

300
00:16:41,900 --> 00:16:44,040
has more members of course.

301
00:16:44,040 --> 00:16:47,500
So next two Professor Cremers and me

302
00:16:47,500 --> 00:16:50,672
are two more post-Docs and 11 Ph.D. students.

303
00:16:50,672 --> 00:16:52,130
And of course we have a whole bunch

304
00:16:52,130 --> 00:16:55,820
of master students working on all kinds of problems.

305
00:16:55,820 --> 00:17:00,140
So our research topics are not only

306
00:17:00,140 --> 00:17:04,069
quadrotors and depth cameras.

307
00:17:04,069 --> 00:17:06,970
We're also looking at Visual SLAM of course and then 3D

308
00:17:06,970 --> 00:17:10,960
reconstruction, but also image segmentation and scene

309
00:17:10,960 --> 00:17:13,579
understanding shape matching.

310
00:17:13,579 --> 00:17:16,560
For example, if you try to find correspondences

311
00:17:16,560 --> 00:17:18,579
between two or three shapes.

312
00:17:18,579 --> 00:17:21,400
And more generally, however we have

313
00:17:21,400 --> 00:17:23,589
people working on convex optimization

314
00:17:23,589 --> 00:17:25,349
of all kinds of problems for example

315
00:17:25,349 --> 00:17:31,100
in optical flow or motion estimation, super resolution,

316
00:17:31,100 --> 00:17:33,170
and so on.

317
00:17:33,170 --> 00:17:35,220
So in the remainder of this video,

318
00:17:35,220 --> 00:17:39,440
I just want to show you a few of the research results

319
00:17:39,440 --> 00:17:42,840
that we did over the past years.

320
00:17:42,840 --> 00:17:45,770
This is actually one of our first videos on quadrotors.

321
00:17:45,770 --> 00:17:48,380
And this was the master thesis project

322
00:17:48,380 --> 00:17:51,580
of Jakob Engel, who's standing here in the middle.

323
00:17:51,580 --> 00:17:58,210
And he used a Parrot AR.Drone in combination with PTAM,

324
00:17:58,210 --> 00:18:01,330
with the PTAM library to build an initial map

325
00:18:01,330 --> 00:18:03,390
of the environment and then use that map

326
00:18:03,390 --> 00:18:05,200
to localize the quadrotor.

327
00:18:05,200 --> 00:18:10,465
And then even if you push away the quadrotor from it's set

328
00:18:10,465 --> 00:18:14,830
point it's automatically able to find back

329
00:18:14,830 --> 00:18:18,350
to it's designated location.

330
00:18:18,350 --> 00:18:22,290
In this video you can see a bit more details on the approach.

331
00:18:22,290 --> 00:18:24,040
In the middle you can see the quadrotor

332
00:18:24,040 --> 00:18:27,650
flying in a typical environment.

333
00:18:27,650 --> 00:18:33,070
In the bottom right to see you get the live view

334
00:18:33,070 --> 00:18:35,540
from the quadrotor that is being used by PTAM

335
00:18:35,540 --> 00:18:37,340
to build up initial map.

336
00:18:37,340 --> 00:18:39,330
It just extracts visual features,

337
00:18:39,330 --> 00:18:41,850
so-called fast corners in this case,

338
00:18:41,850 --> 00:18:46,140
and then triangulates them and optimizes their 3-D poles

339
00:18:46,140 --> 00:18:50,490
to obtain a so-called feature based three dimensional map,

340
00:18:50,490 --> 00:18:52,380
which is visualized on the left side.

341
00:18:52,380 --> 00:18:57,160
And with this visual map it can quite correctly

342
00:18:57,160 --> 00:18:59,600
recover and find its position and then use

343
00:18:59,600 --> 00:19:04,060
that for flying back to its poles.

344
00:19:04,060 --> 00:19:08,350
Another problem is, of course that if you only have PTAM,

345
00:19:08,350 --> 00:19:14,220
pure PTAM only recovers or learns a 3-D map up to scale

346
00:19:14,220 --> 00:19:16,510
because with just a single monocular camera,

347
00:19:16,510 --> 00:19:20,030
you cannot infer how large the world is.

348
00:19:20,030 --> 00:19:22,860
But because the AR.Drone has this ultrasound sensor,

349
00:19:22,860 --> 00:19:26,650
it can measure the distance from the ground and also

350
00:19:26,650 --> 00:19:29,750
its absolute horizontal speed.

351
00:19:29,750 --> 00:19:32,690
And by using these measurements, it

352
00:19:32,690 --> 00:19:36,250
becomes possible to estimate the real scale of the world.

353
00:19:36,250 --> 00:19:40,010
And then with that, fly figures, fly automatically

354
00:19:40,010 --> 00:19:42,900
figures that have a fixed size in the environment.

355
00:19:42,900 --> 00:19:45,280
So for this figure, for example, you

356
00:19:45,280 --> 00:19:49,370
can specify beforehand how large the sides of the holes are.

357
00:19:49,370 --> 00:19:54,100

358
00:19:54,100 --> 00:19:57,030
Then we also have been working with the AscTec Pelican

359
00:19:57,030 --> 00:19:57,970
platform.

360
00:19:57,970 --> 00:20:00,900
Here, this was a paper that we submitted to RSS,

361
00:20:00,900 --> 00:20:03,180
and published at RSS last year.

362
00:20:03,180 --> 00:20:08,740
Here we have a Kinect/Asus sensor mounted on the quadrotor

363
00:20:08,740 --> 00:20:12,510
and from the data from this sensor

364
00:20:12,510 --> 00:20:15,780
we are able to estimate the poles of the quadrotor

365
00:20:15,780 --> 00:20:20,346
in real time, but also generate a 3-D-- a dense 3-D map

366
00:20:20,346 --> 00:20:21,730
of the environment.

367
00:20:21,730 --> 00:20:23,530
And as you can see from this model,

368
00:20:23,530 --> 00:20:26,330
this would already be quite useful for an architect

369
00:20:26,330 --> 00:20:30,770
to take some measurements, for example, to decide how large,

370
00:20:30,770 --> 00:20:32,840
how high the table is or how much space you

371
00:20:32,840 --> 00:20:36,260
have in the kitchen for an additional cabinet.

372
00:20:36,260 --> 00:20:39,110
We're also interested in 3-D reconstruction in general.

373
00:20:39,110 --> 00:20:44,240
Not only from quadrotor data, but also from handheld data.

374
00:20:44,240 --> 00:20:47,800
This is work done by Frank Steinbrucker

375
00:20:47,800 --> 00:20:50,685
on large scale 3-D reconstruction.

376
00:20:50,685 --> 00:20:54,940
This is actually the corridor of our group in Munich,

377
00:20:54,940 --> 00:20:56,490
so if you ever come visit us, you

378
00:20:56,490 --> 00:20:58,385
might recognize some of the offices.

379
00:20:58,385 --> 00:21:01,580

380
00:21:01,580 --> 00:21:03,724
and it would be of course very nice

381
00:21:03,724 --> 00:21:05,140
if you could do that automatically

382
00:21:05,140 --> 00:21:09,270
with a fleet of quadrotors at some point.

383
00:21:09,270 --> 00:21:11,295
So if you'd like to know more about our research

384
00:21:11,295 --> 00:21:15,030
or our group in general, you're welcome to visit our website

385
00:21:15,030 --> 00:21:18,010
at vision.in.tum.de.

386
00:21:18,010 --> 00:21:21,200
We provide there the full length papers of our research.

387
00:21:21,200 --> 00:21:24,635
We also publish some code and open source.

388
00:21:24,635 --> 00:21:27,820
So If you'd like to try out some of our approaches by yourself,

389
00:21:27,820 --> 00:21:30,170
then you're welcome to do so.

390
00:21:30,170 --> 00:21:32,020
We also have a YouTube channel on which

391
00:21:32,020 --> 00:21:35,650
we provide lecture videos from the previous years.

392
00:21:35,650 --> 00:21:41,050
And also some research videos that accompany all the papers

393
00:21:41,050 --> 00:21:42,730
that we published.

394
00:21:42,730 --> 00:21:44,530
We also have a Facebook page if you

395
00:21:44,530 --> 00:21:47,290
want to stay updated on news and things

396
00:21:47,290 --> 00:21:49,760
that are going on in our group.

397
00:21:49,760 --> 00:21:52,290
And of course you can also meet us

398
00:21:52,290 --> 00:21:55,040
at scientific conferences and workshops.

399
00:21:55,040 --> 00:22:00,120
We're actually regularly present at ICRA and IROS and RSS,

400
00:22:00,120 --> 00:22:02,380
which are robotics conferences.

401
00:22:02,380 --> 00:22:04,110
And we are also present of course

402
00:22:04,110 --> 00:22:08,260
at the Computer Vision Conferences such as ICCV, CVPR.

403
00:22:08,260 --> 00:22:11,010
The European Computer Vision Conference ECCV

404
00:22:11,010 --> 00:22:14,960
and the German Computer Vision conference, GCPR.

405
00:22:14,960 --> 00:22:18,730
With that, I hope I have interested you in this course.

406
00:22:18,730 --> 00:22:21,650
I hope I see most of you back next week

407
00:22:21,650 --> 00:22:25,490
when we look at linear algebra and 3-D geometry which

408
00:22:25,490 --> 00:22:30,860
will form the basis for the remainder of this course.

409
00:22:30,860 --> 00:22:35,160
We also look then a little bit at sensors and actuators

410
00:22:35,160 --> 00:22:38,121
that are used on quadrotors.

411
00:22:38,121 --> 00:22:38,620
Good.

412
00:22:38,620 --> 23:59:59,999
Have a nice week, then, and see you back soon.

